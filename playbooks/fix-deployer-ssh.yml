- hosts: all
  become: true
  gather_facts: false
  vars:
    pubkey_path: "{{ lookup('env','HOME') + '/.ssh/id_ed25519.pub' }}"
  tasks:
    - name: Ensure deployer user/home
      user:
        name: deployer
        shell: /bin/bash
        create_home: yes

    - name: Ensure .ssh dir
      file:
        path: /home/deployer/.ssh
        state: directory
        owner: deployer
        group: deployer
        mode: '0700'

    - name: Install/ensure authorized_keys for deployer
      authorized_key:
        user: deployer
        state: present
        key: "{{ lookup('file', pubkey_path) }}"

    - name: Fix ownership/permissions on authorized_keys
      file:
        path: /home/deployer/.ssh/authorized_keys
        owner: deployer
        group: deployer
        mode: '0600'

    - name: Restore SELinux context (ignore if SELinux disabled)
      command: restorecon -Rv /home/deployer/.ssh
      register: se
      failed_when: false
      changed_when: false

    - name: Ensure SSH service installed and running
      service:
        name: sshd
        state: started
        enabled: yes

    - name: Ensure firewalld allows SSH (22/tcp)
      block:
        - service: { name: firewalld, state: started, enabled: yes }
        - firewalld:
            service: ssh
            permanent: yes
            state: enabled
            immediate: yes
      rescue:
        - debug: msg="firewalld not present or not needed"

    - name: Ensure sftp Subsystem line (RHEL/Rocky 9 default)
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?Subsystem\\s+sftp\\b'
        line: 'Subsystem sftp /usr/libexec/openssh/sftp-server'
        insertafter: EOF
        backup: yes
      notify: Restart sshd

    - name: Ensure publickey/password/root baseline (non-intrusive)
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        backrefs: yes
      loop:
        - { regexp: '^#?PubkeyAuthentication\\s+.*',      line: 'PubkeyAuthentication yes' }
        - { regexp: '^#?PasswordAuthentication\\s+.*',    line: 'PasswordAuthentication no' }
        - { regexp: '^#?PermitRootLogin\\s+.*',           line: 'PermitRootLogin prohibit-password' }
      notify: Restart sshd

  handlers:
    - name: Restart sshd
      service:
        name: sshd
        state: restarted
